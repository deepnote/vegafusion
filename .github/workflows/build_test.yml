name: build_test
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  check-rust:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy
      - uses: prefix-dev/setup-pixi@v0.8.9
        with:
          cache: true
      - name: Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock', 'Cargo.lock', 'vegafusion-python/pyproject.toml') }}-check-rust
          path: |
            ~/.cargo
            target
            .pixi
      - name: Check fmt
        run: pixi run check-rs-fmt
      - name: Check warnings
        run: pixi run check-rs-warnings
      - name: Check clippy
        run: pixi run check-rs-clippy

  test-rust:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: prefix-dev/setup-pixi@v0.8.9
      - name: Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock', 'Cargo.lock', 'vegafusion-python/pyproject.toml') }}-test-rust2
          path: |
            ~/.cargo
            target
            .pixi
      - name: start minio server in the background
        run: pixi run start-minio &
      - name: Test rust
        run: |
          pixi run test-rs --release
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: vegafusion-rt-test-images-linux
          path: |
            vegafusion-runtime/tests/output

  

  check-vegafusion-python:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: prefix-dev/setup-pixi@v0.8.9
      - name: Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock', 'Cargo.lock', 'vegafusion-python/pyproject.toml') }}-build-vegafusion-wasm
          path: |
            ~/.cargo
            target
            .pixi
      - name: Dev python
        run: |
          pixi run dev-py
      - name: Check format and lint
        run: |
          pixi run lint-check-py
      - name: Type check
        run: |
          pixi run type-check-py

  # Use maturin action to build linux wheels within proper manylinux compatible containers
  # (This is why we don't use the pixi "build-py" action)
  build-vegafusion-python-linux-64:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      - name: Clear target/wheels
        run: rm -rf target/wheels
      - name: Build wheels (Linux)
        uses: messense/maturin-action@v1.45.0
        with:
          command: build
          manylinux: 2014
          rust-toolchain: stable
          args: -m vegafusion-python/Cargo.toml --profile release-opt --features=protobuf-src --strip --sdist
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: python-wheels-linux-64
          path: |
            target/wheels/*.tar.gz
            target/wheels/*.whl
          retention-days: 1
          if-no-files-found: error

  build-vegafusion-python-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      - name: Clear target/wheels
        run: rm -rf target/wheels
      - name: Build arm64 wheels
        uses: messense/maturin-action@v1.45.0
        with:
          command: build
          manylinux: 2_28
          rust-toolchain: stable
          args: -m vegafusion-python/Cargo.toml --profile release-opt --features=protobuf-src --strip --target aarch64-unknown-linux-gnu
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: python-wheels-linux-arm64
          path: |
            target/wheels/*.tar.gz
            target/wheels/*.whl
          retention-days: 1
          if-no-files-found: error

  build-vegafusion-python-win-64:
    runs-on: windows-2022
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: prefix-dev/setup-pixi@v0.8.9
      - name: Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock', 'Cargo.lock', 'vegafusion-python/pyproject.toml') }}-build-vegafusion-python-win-64
          path: |
            ~/.cargo
            target
            .pixi
      - name: Build vegafusion-python
        run: |
          pixi run build-py
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: python-wheels-win-64
          path: |
            target/wheels/*.tar.gz
            target/wheels/*.whl
          retention-days: 1
          if-no-files-found: error

  build-vegafusion-python-osx-64:
    runs-on: macos-13
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: prefix-dev/setup-pixi@v0.8.9
      - name: Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ hashFiles('pixi.lock', 'Cargo.lock', 'vegafusion-python/pyproject.toml') }}-build-vegafusion-python-osx-64
          path: |
            ~/.cargo
            target
            .pixi
      - name: Build vegafusion-python
        run: |
          pixi run build-py
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: python-wheels-osx-64
          path: |
            target/wheels/*.tar.gz
            target/wheels/*.whl
          retention-days: 1
          if-no-files-found: error

  build-vegafusion-python-osx-arm64:
    runs-on: macos-14
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: aarch64-apple-darwin
      - uses: prefix-dev/setup-pixi@v0.8.9
      - name: Cache
        uses: actions/cache@v4
        with:
          key: osx-arm64-${{ hashFiles('pixi.lock', 'Cargo.lock', 'vegafusion-python/pyproject.toml') }}-build-vegafusion-python-osx-arm64
          path: |
            ~/.cargo
            target
            .pixi
      - name: Build vegafusion-python
        run: |
          pixi run build-py --target aarch64-apple-darwin
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: python-wheels-osx-arm64
          path: |
            target/wheels/*.tar.gz
            target/wheels/*.whl
          retention-days: 1
          if-no-files-found: error

  test-vegafusion-python-linux-64:
    runs-on: ubuntu-22.04
    needs: [build-vegafusion-python-linux-64]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.11"
      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
      - name: Install fonts on Linux
        if: runner.os == 'Linux'
        run: |
          echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
          sudo apt-get install ttf-mscorefonts-installer
      - name: Download vegafusion-python wheel
        uses: actions/download-artifact@v4.1.8
        with:
          name: python-wheels-linux-64
          path: target/wheels/
      - name: install wheels
        working-directory: target/wheels/
        run: |
          ls -la
          python -m pip install deepnote_vegafusion-*manylinux_2_17_x86_64*.whl

          # Optional dependencies
          python -m pip install pyarrow pandas polars-lts-cpu "duckdb>=1.0" "vl-convert-python>=1.0.1rc1" scikit-image "pandas>=2.2" jupytext voila anywidget ipywidgets chromedriver-binary-auto

          # Test dependencies
          python -m pip install pytest altair vega-datasets scikit-image jupytext voila ipykernel anywidget ipywidgets selenium flaky tenacity chromedriver-binary-auto "pyspark==3.5.*"
      - name: Test vegafusion
        working-directory: vegafusion-python/
        env:
          VEGAFUSION_TEST_HEADLESS: 1
        # Run only Spark end-to-end tests, as other tests interact with Altair which requires
        # exact `vegafusion` library to be installed. Since our lib has different name, it fails.
        run: pytest -vv -rA tests/test_spark_e2e.py
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4.4.3
        if: failure()
        with:
          name: vegafusion-python-test-failures
          path: |
            vegafusion-python/tests/output/*

  

  

  # Bundle all python wheels into a single artifact for easier downloading
  bundle-vegafusion-python-wheels:
    needs: [
        # jobs that build but don't have test dependencies
        build-vegafusion-python-linux-arm64,
        build-vegafusion-python-osx-64,

        # job that test the wheels
        test-vegafusion-python-linux-64,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Merge Wheel Artifacts
        uses: actions/upload-artifact/merge@v4.4.3
        with:
          name: vegafusion-python-wheels-all
          pattern: python-wheels-*
          delete-merged: true
          separate-directories: false
